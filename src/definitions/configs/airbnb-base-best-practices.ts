// PathMark: ./src/definitions/configs/airbnb-base-best-practices.ts
import { RULES } from "../../constants";
import type { Config } from ".";

export default {
  definitions: `{
    files: jsFiles,
    ${RULES}
  }`,
  ejected: true,
  enabled: true,
  id: "airbnb-base",
  name: "AirBnb Base",
  nameSecondary: "Best-Practices",
  packages: [
    {
      declaredAs: "airbnbBaseBestPractices",
      package: "eslint-config-airbnb-base",
      requiresImport: false,
      subModule: "/rules/best-practices",
    },
  ],
  requiredPlugins: [],
  rules: `"accessor-pairs": 0,
    "array-callback-return": [2, { allowImplicit: true }],
    "block-scoped-var": 2,
    "class-methods-use-this": [2, { exceptMethods: [] }],
    complexity: [0, 20],
    "consistent-return": 2,
    curly: [2, "multi-line"],
    "default-case": [
      2,
      { commentPattern: "^no default$" },
    ],
    "default-case-last": 2,
    "default-param-last": 2,
    "dot-location": [2, "property"],
    "dot-notation": [2, { allowKeywords: true }],
    eqeqeq: [2, "always", { null: "ignore" }],
    "grouped-accessor-pairs": 2,
    "guard-for-in": 2,
    "max-classes-per-file": [2, 1],
    "no-alert": 1,
    "no-caller": 2,
    "no-case-declarations": 2,
    "no-constructor-return": 2,
    "no-div-regex": 0,
    "no-else-return": [2, { allowElseIf: false }],
    "no-empty-function": [
      2,
      {
        allow: ["arrowFunctions", "functions", "methods"],
      },
    ],
    "no-empty-pattern": 2,
    "no-empty-static-block": 0,
    "no-eq-null": 0,
    "no-eval": 2,
    "no-extend-native": 2,
    "no-extra-bind": 2,
    "no-extra-label": 2,
    "no-fallthrough": 2,
    "no-floating-decimal": 2,
    "no-global-assign": [2, { exceptions: [] }],
    "no-implicit-coercion": [
      0,
      {
        allow: [],
        boolean: false,
        number: true,
        string: true,
      },
    ],
    "no-implicit-globals": 0,
    "no-implied-eval": 2,
    "no-invalid-this": 0,
    "no-iterator": 2,
    "no-labels": [2, { allowLoop: false, allowSwitch: false }],
    "no-lone-blocks": 2,
    "no-loop-func": 2,
    "no-magic-numbers": [
      0,
      {
        detectObjects: false,
        enforceConst: true,
        ignore: [],
        ignoreArrayIndexes: true,
      },
    ],
    "no-multi-spaces": [
      2,
      {
        ignoreEOLComments: false,
      },
    ],
    "no-multi-str": 2,
    "no-native-reassign": 0,
    "no-new": 2,
    "no-new-func": 2,
    "no-new-wrappers": 2,
    "no-nonoctal-decimal-escape": 2,
    "no-object-constructor": 0,
    "no-octal": 2,
    "no-octal-escape": 2,
    "no-param-reassign": [
      2,
      {
        ignorePropertyModificationsFor: [
          "acc",
          "accumulator",
          "e",
          "ctx",
          "context",
          "req",
          "request",
          "res",
          "response",
          "$scope",
          "staticContext",
        ],
        props: true,
      },
    ],
    "no-proto": 2,
    "no-redeclare": 2,
    "no-restricted-properties": [
      2,
      {
        message: "arguments.callee is deprecated",
        object: "arguments",
        property: "callee",
      },
      {
        message: "Please use Number.isFinite instead",
        object: "global",
        property: "isFinite",
      },
      {
        message: "Please use Number.isFinite instead",
        object: "self",
        property: "isFinite",
      },
      {
        message: "Please use Number.isFinite instead",
        object: "window",
        property: "isFinite",
      },
      {
        message: "Please use Number.isNaN instead",
        object: "global",
        property: "isNaN",
      },
      {
        message: "Please use Number.isNaN instead",
        object: "self",
        property: "isNaN",
      },
      {
        message: "Please use Number.isNaN instead",
        object: "window",
        property: "isNaN",
      },
      {
        message: "Please use Object.defineProperty instead.",
        property: "__defineGetter__",
      },
      {
        message: "Please use Object.defineProperty instead.",
        property: "__defineSetter__",
      },
      {
        message: "Use the exponentiation operator (**) instead.",
        object: "Math",
        property: "pow",
      },
    ],
    "no-return-assign": [2, "always"],
    "no-return-await": 2,
    "no-script-url": 2,
    "no-self-assign": [
      2,
      {
        props: true,
      },
    ],
    "no-self-compare": 2,
    "no-sequences": 2,
    "no-throw-literal": 2,
    "no-unmodified-loop-condition": 0,
    "no-unused-expressions": [
      2,
      {
        allowShortCircuit: false,
        allowTaggedTemplates: false,
        allowTernary: false,
      },
    ],
    "no-unused-labels": 2,
    "no-useless-call": 0,
    "no-useless-catch": 2,
    "no-useless-concat": 2,
    "no-useless-escape": 2,
    "no-useless-return": 2,
    "no-void": 2,
    "no-warning-comments": [
      0,
      { location: "start", terms: ["todo", "fixme", "xxx"] },
    ],
    "no-with": 2,
    "prefer-named-capture-group": 0,
    "prefer-object-has-own": 0,
    "prefer-promise-reject-errors": [2, { allowEmptyReject: true }],
    "prefer-regex-literals": [
      2,
      {
        disallowRedundantWrapping: true,
      },
    ],
    radix: 2,
    "require-await": 0,
    "require-unicode-regexp": 0,
    "vars-on-top": 2,
    "wrap-iife": [2, "outside", { functionPrototypeMethods: false }],
    yoda: 2,`,
} satisfies Config;
// EOF
